FILE: simple.kt
    public final class Foo<T> : R|kotlin/Any| {
        public constructor<T>(): R|Foo<T>| {
            super<R|kotlin/Any|>()
        }

        public final inner class Inner<Outer(T)> : R|kotlin/Any| {
            public Foo<T>.constructor(): R|Foo.Inner<T>| {
                super<R|kotlin/Any|>()
            }

        }

        public final inner class Inner2<T2, Outer(T)> : R|kotlin/Any| {
            public Foo<T>.constructor<T2>(): R|Foo.Inner2<T2, T>| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final typealias InnerAlias<K> = R|Foo.Inner<K>|
    public final typealias InnerAlias2<K, K2> = R|Foo.Inner2<K2, K>|
    public final typealias InnerAlias3<K, K2> = R|Foo.Inner2<K, K2>|
    public final fun test(): R|kotlin/Unit| {
        lval foo: R|Foo<kotlin/String>| = R|/Foo.Foo|<R|kotlin/String|>()
        R|<local>/foo|.R|/Foo.Inner.Inner|<R|kotlin/String|>()
        R|<local>/foo|.R|/Foo.Inner2.Inner2|<R|kotlin/String|, R|kotlin/Int|>()
        R|<local>/foo|.R|/Foo.Inner2.Inner2|<R|kotlin/Int|, R|kotlin/String|>()
        lval aliasedInner: R|kotlin/reflect/KFunction1<Foo<kotlin/String>, {InnerAlias<kotlin/String>=} Foo.Inner<kotlin/String>>| = Q|Foo|<R|kotlin/String|>::R|/Foo.Inner.Inner<kotlin/String>|
        R|<local>/aliasedInner|.R|SubstitutionOverride<kotlin/reflect/KFunction1.invoke: R|{InnerAlias<kotlin/String>=} Foo.Inner<kotlin/String>|>|(R|<local>/foo|)
    }
